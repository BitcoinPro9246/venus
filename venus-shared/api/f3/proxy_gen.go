// Code generated by github.com/filecoin-project/venus/venus-devtool/api-gen. DO NOT EDIT.
package f3

import (
	"context"
	"time"

	address "github.com/filecoin-project/go-address"
	"github.com/filecoin-project/go-f3/certs"
	"github.com/filecoin-project/go-f3/gpbft"

	"github.com/filecoin-project/venus/venus-shared/types"
)

type F3Struct struct {
	Internal struct {
		F3GetCertificate       func(ctx context.Context, instance uint64) (*certs.FinalityCertificate, error)                                               `perm:"read"`
		F3GetECPowerTable      func(ctx context.Context, tsk types.TipSetKey) (gpbft.PowerEntries, error)                                                   `perm:"read"`
		F3GetF3PowerTable      func(ctx context.Context, tsk types.TipSetKey) (gpbft.PowerEntries, error)                                                   `perm:"read"`
		F3GetLatestCertificate func(ctx context.Context) (*certs.FinalityCertificate, error)                                                                `perm:"read"`
		F3Participate          func(ctx context.Context, minerID address.Address, newLeaseExpiration time.Time, oldLeaseExpiration time.Time) (bool, error) `perm:"sign"`
	}
}

func (s *F3Struct) F3GetCertificate(p0 context.Context, p1 uint64) (*certs.FinalityCertificate, error) {
	return s.Internal.F3GetCertificate(p0, p1)
}
func (s *F3Struct) F3GetECPowerTable(p0 context.Context, p1 types.TipSetKey) (gpbft.PowerEntries, error) {
	return s.Internal.F3GetECPowerTable(p0, p1)
}
func (s *F3Struct) F3GetF3PowerTable(p0 context.Context, p1 types.TipSetKey) (gpbft.PowerEntries, error) {
	return s.Internal.F3GetF3PowerTable(p0, p1)
}
func (s *F3Struct) F3GetLatestCertificate(p0 context.Context) (*certs.FinalityCertificate, error) {
	return s.Internal.F3GetLatestCertificate(p0)
}
func (s *F3Struct) F3Participate(p0 context.Context, p1 address.Address, p2 time.Time, p3 time.Time) (bool, error) {
	return s.Internal.F3Participate(p0, p1, p2, p3)
}
